buildscript {
	ext {
		springBootVersion = '2.3.0.RELEASE'
	}
	repositories {
		jcenter()    // Bintray's repository - a fast Maven Central mirror & more
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.2.0' // If a newer version is available, use it
		classpath 'org.akhikhl.gretty:gretty:+'
	}
}

repositories {   // repositories for Jar's you access in your code
	maven {
		url 'https://oss.sonatype.org/content/repositories/snapshots' // SNAPSHOT repository (if needed)
	}
	mavenCentral()
	jcenter()
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.google.cloud.tools.appengine'
apply plugin: 'org.akhikhl.gretty'

group = 'com.example.heroku'
version = '1.0'
sourceCompatibility = 1.8     // App Engine Flexible uses Java 8
targetCompatibility = 1.8     // App Engine Flexible uses Java 8

tasks.named('wrapper') {
	distributionType = Wrapper.DistributionType.ALL
}

repositories {
	mavenCentral()
}

dependencies {
	providedCompile 'com.google.appengine:appengine:+'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.webjars:jquery:3.3.1-1'
	runtimeOnly 'org.webjars:jquery-ui:1.12.1'
	runtimeOnly 'org.webjars:bootstrap:4.1.3'
	runtimeOnly 'org.webjars:webjars-locator:0.38'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// my gradle
	implementation group: 'org.json', name: 'json', version: '20090211'
	// https://mvnrepository.com/artifact/com.rometools/rome
	implementation group: 'com.rometools', name: 'rome', version: '1.15.0'
	// https://projectlombok.org/setup/gradle
	compileOnly 'org.projectlombok:lombok:1.18.16'
	annotationProcessor 'org.projectlombok:lombok:1.18.16'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
	testCompileOnly 'org.projectlombok:lombok:1.18.16'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'

	// Heroku tutorial
//	compile "org.jscience:jscience:4.3.1"

	// https://mvnrepository.com/artifact/com.google.firebase/firebase-admin
	implementation 'com.google.firebase:firebase-admin:7.1.1'

	// https://mvnrepository.com/artifact/org.jsoup/jsoup
	implementation group: 'org.jsoup', name: 'jsoup', version: '1.13.1'

	// https://mvnrepository.com/artifact/com.google.appengine/gradle-appengine-plugin
	implementation group: 'com.google.appengine', name: 'gradle-appengine-plugin', version: '1.9.59'

	// Add your dependencies here.
//  compile 'com.google.cloud:google-cloud:+'   // Latest Cloud API's http://googlecloudplatform.github.io/google-cloud-java
	testCompile 'junit:junit:4.12'
	testCompile 'com.google.truth:truth:0.33'
	testCompile 'org.mockito:mockito-all:1.10.19'

	testCompile 'com.google.appengine:appengine-testing:+'
	testCompile 'com.google.appengine:appengine-api-stubs:+'
	testCompile 'com.google.appengine:appengine-tools-sdk:+'
}

// Always run unit tests
appengineDeploy.dependsOn test
appengineStage.dependsOn test

appengine {  // App Engine tasks configuration
	deploy {   // deploy configuration
		projectId = 'kqxs-307408'
		version = '1'
	}
}

gretty {
	servletContainer = 'jetty9'  // What App Engine Flexible uses
}

test {
	useJUnit()
	testLogging.showStandardStreams = true
	beforeTest { descriptor ->
		logger.lifecycle("test: " + descriptor + "  Running")
	}

	onOutput { descriptor, event ->
		logger.lifecycle("test: " + descriptor + ": " + event.message )
	}
	afterTest { descriptor, result ->
		logger.lifecycle("test: " + descriptor + ": " + result )
	}
}

springBoot {
	mainClassName = 'com.example.heroku.HerokuApplication'
}

appengine {
	deploy {   // deploy configuration
		stopPreviousVersion = true  // default - stop the current version
		promote = true              // default - & make this the current version
	}
}